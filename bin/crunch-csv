#!/usr/bin/env ruby

require 'csv'
require 'awesome_print'
require 'pry'

REDUCE_INTERVALS = -> (reqs) {
  reqs.map { |req|
    req
      .each_cons(2)
      .map { |timestamp_pair| timestamp_pair.last - timestamp_pair.first }
  }
}

PERCENTILE = -> (k, series) {
  series.sort.reverse.drop((series.count * (1 - k / 100.0)).to_i).first
}

MEAN = -> (series) {
  series.reduce(&:+) / series.size.to_f
}

REQS = CSV.read(ARGV.first).map { |l| l.map(&:to_i) }

INTERVALS = REDUCE_INTERVALS.(REQS)

IS = Array.new(3) { |i| { "i#{i}".to_sym => INTERVALS.map { |is| is[i] } } }
          .reduce(&:merge)



stats = IS.map { |k, v|
  [
    k,
    {
      p99: PERCENTILE.(99, v),
      p95: PERCENTILE.(95, v),
      mean: MEAN.(v),
      max: v.max
    }
  ]
}.to_h.merge(worse_10: INTERVALS.map { |req| req.reduce(&:+) }.sort.reverse.take(10))

Pry::ColorPrinter.pp(stats)
# p Array.new(INTERVALS[0].size) { |i| [INTERVALS[0], INTERVALS[1], INTERVALS[2]] }
